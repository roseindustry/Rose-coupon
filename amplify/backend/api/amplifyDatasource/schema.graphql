type Employees @model @auth(rules: [{allow: public}]) {
  id: ID!
  tenant_id: Int
  firstName: String
  lastName: String
  role: String
  email: String
  Tenants: Tenants @hasOne
}

type Transactions @model @auth(rules: [{allow: public}]) {
  id: ID!
  tenant_id: Int
  order_id: Int
  employee_id: Int
  date: AWSDate
  paymentMethod: String
  amount: Float
  tip: Float
  Employees: Employees @hasOne
  Orders: Orders @hasOne
  Tenants: Tenants @hasOne
}

type Customers @model @auth(rules: [{allow: public}]) {
  id: ID!
  tenant_id: Int
  firstName: String
  lastName: String
  email: String
  phoneNumber: String
  Tenants: Tenants @hasOne
}

type Categories @model @auth(rules: [{allow: public}]) {
  id: ID!
  tenant_id: Int
  name: String
  Tenants: Tenants @hasOne
}

type Users @model @auth(rules: [{allow: public}]) {
  id: ID!
  tenant_id: Int
  username: String
  password: String
  email: String
  firstName: String
  lastName: String
  role: String
  tenantsID: ID! @index(name: "byTenants")
  Tenants: Tenants @belongsTo(fields: ["tenantsID"])
}

type MenuItems @model @auth(rules: [{allow: public}]) {
  id: ID!
  tenant_id: Int
  name: String
  description: String
  purchasePrice: Float
  sellingPrice: Float
  status: Boolean
  rating_id: Int
  category_id: Int
  ordersID: ID! @index(name: "byOrders")
  Ratings: Ratings @hasOne
  Categories: Categories @hasOne
  Tenants: Tenants @hasOne
}

type Ratings @model (rules: [{allow: public}]) {
  id: ID!
  comment: String
  ratingValue: Int (rules: 1 - 5)
  menuItem_id: Int 
  customer_id: Int
  Customers: Customers @hasOne
  MenuItems: MenuItems @hasOne
}

type Tenants @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  contactEmail: String
  Users: [Users] @hasMany(indexName: "byTenants", fields: ["id"])
}

type Orders @model @auth(rules: [{allow: public}]) {
  id: ID!
  customer_id: Int
  tenant_id: Int
  orderNumber: Int
  tableNumber: Int
  type: String
  status: Boolean
  orderDate: AWSDate
  Customers: Customers @hasOne
  MenuItems: [MenuItems] @hasMany(indexName: "byOrders", fields: ["id"])
  Tenants: Tenants @hasOne
}

type OrderDetails @model @auth(rules: [{allow: public}]) {
  id: ID!
  order_id: Int!
  menuItem_id: Int
  quantity: Int
  priceAtTimeOfOrder: Float
  MenuItems: MenuItems @hasOne
}
